///
/// JHybridSFSafariViewControllerSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#include "JHybridSFSafariViewControllerSpec.hpp"

// Forward declaration of `SFSafariViewControllerPresentParams` to properly resolve imports.
namespace margelo::nitro::inappbrowser { struct SFSafariViewControllerPresentParams; }
// Forward declaration of `ModalPresentationStyle` to properly resolve imports.
namespace margelo::nitro::inappbrowser { enum class ModalPresentationStyle; }

#include "SFSafariViewControllerPresentParams.hpp"
#include "JSFSafariViewControllerPresentParams.hpp"
#include <string>
#include <optional>
#include "ModalPresentationStyle.hpp"
#include "JModalPresentationStyle.hpp"

namespace margelo::nitro::inappbrowser {

  jni::local_ref<JHybridSFSafariViewControllerSpec::jhybriddata> JHybridSFSafariViewControllerSpec::initHybrid(jni::alias_ref<jhybridobject> jThis) {
    return makeCxxInstance(jThis);
  }

  void JHybridSFSafariViewControllerSpec::registerNatives() {
    registerHybrid({
      makeNativeMethod("initHybrid", JHybridSFSafariViewControllerSpec::initHybrid),
    });
  }

  size_t JHybridSFSafariViewControllerSpec::getExternalMemorySize() noexcept {
    static const auto method = _javaPart->getClass()->getMethod<jlong()>("getMemorySize");
    return method(_javaPart);
  }

  // Properties
  

  // Methods
  void JHybridSFSafariViewControllerSpec::present(const SFSafariViewControllerPresentParams& params) {
    static const auto method = _javaPart->getClass()->getMethod<void(jni::alias_ref<JSFSafariViewControllerPresentParams> /* params */)>("present");
    method(_javaPart, JSFSafariViewControllerPresentParams::fromCpp(params));
  }
  void JHybridSFSafariViewControllerSpec::dismiss() {
    static const auto method = _javaPart->getClass()->getMethod<void()>("dismiss");
    method(_javaPart);
  }

} // namespace margelo::nitro::inappbrowser
