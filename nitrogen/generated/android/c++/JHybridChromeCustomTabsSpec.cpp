///
/// JHybridChromeCustomTabsSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#include "JHybridChromeCustomTabsSpec.hpp"

// Forward declaration of `ChromeCustomTabsLaunchParams` to properly resolve imports.
namespace margelo::nitro::inappbrowser { struct ChromeCustomTabsLaunchParams; }

#include "ChromeCustomTabsLaunchParams.hpp"
#include "JChromeCustomTabsLaunchParams.hpp"
#include <string>

namespace margelo::nitro::inappbrowser {

  jni::local_ref<JHybridChromeCustomTabsSpec::jhybriddata> JHybridChromeCustomTabsSpec::initHybrid(jni::alias_ref<jhybridobject> jThis) {
    return makeCxxInstance(jThis);
  }

  void JHybridChromeCustomTabsSpec::registerNatives() {
    registerHybrid({
      makeNativeMethod("initHybrid", JHybridChromeCustomTabsSpec::initHybrid),
    });
  }

  size_t JHybridChromeCustomTabsSpec::getExternalMemorySize() noexcept {
    static const auto method = _javaPart->getClass()->getMethod<jlong()>("getMemorySize");
    return method(_javaPart);
  }

  // Properties
  

  // Methods
  void JHybridChromeCustomTabsSpec::launch(const ChromeCustomTabsLaunchParams& params) {
    static const auto method = _javaPart->getClass()->getMethod<void(jni::alias_ref<JChromeCustomTabsLaunchParams> /* params */)>("launch");
    method(_javaPart, JChromeCustomTabsLaunchParams::fromCpp(params));
  }

} // namespace margelo::nitro::inappbrowser
